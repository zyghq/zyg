/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SignupImport } from './routes/signup'
import { Route as SignoutImport } from './routes/signout'
import { Route as SigninImport } from './routes/signin'
import { Route as RecoverImport } from './routes/recover'
import { Route as AuthRouteImport } from './routes/_auth/route'
import { Route as IndexImport } from './routes/index'
import { Route as WorkspacesIndexImport } from './routes/workspaces/index'
import { Route as WorkspacesAddImport } from './routes/workspaces/add'
import { Route as WorkspacesWorkspaceIdImport } from './routes/workspaces/$workspaceId'
import { Route as WorkspacesWorkspaceIdWorkspaceRouteImport } from './routes/workspaces/$workspaceId/_workspace/route'
import { Route as WorkspacesWorkspaceIdSetupIndexImport } from './routes/workspaces/$workspaceId/setup/index'
import { Route as WorkspacesWorkspaceIdWorkspaceIndexImport } from './routes/workspaces/$workspaceId/_workspace/index'
import { Route as WorkspacesWorkspaceIdThreadsThreadIdImport } from './routes/workspaces/$workspaceId/threads/$threadId'
import { Route as WorkspacesWorkspaceIdWorkspaceUnassignedImport } from './routes/workspaces/$workspaceId/_workspace/unassigned'
import { Route as WorkspacesWorkspaceIdWorkspaceMeImport } from './routes/workspaces/$workspaceId/_workspace/me'
import { Route as WorkspacesWorkspaceIdWorkspaceLabelsLabelIdImport } from './routes/workspaces/$workspaceId/_workspace/labels.$labelId'

// Create/Update Routes

const SignupRoute = SignupImport.update({
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const SignoutRoute = SignoutImport.update({
  path: '/signout',
  getParentRoute: () => rootRoute,
} as any)

const SigninRoute = SigninImport.update({
  path: '/signin',
  getParentRoute: () => rootRoute,
} as any)

const RecoverRoute = RecoverImport.update({
  path: '/recover',
  getParentRoute: () => rootRoute,
} as any)

const AuthRouteRoute = AuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const WorkspacesIndexRoute = WorkspacesIndexImport.update({
  path: '/workspaces/',
  getParentRoute: () => rootRoute,
} as any)

const WorkspacesAddRoute = WorkspacesAddImport.update({
  path: '/workspaces/add',
  getParentRoute: () => rootRoute,
} as any)

const WorkspacesWorkspaceIdRoute = WorkspacesWorkspaceIdImport.update({
  path: '/workspaces/$workspaceId',
  getParentRoute: () => rootRoute,
} as any)

const WorkspacesWorkspaceIdWorkspaceRouteRoute =
  WorkspacesWorkspaceIdWorkspaceRouteImport.update({
    id: '/_workspace',
    getParentRoute: () => WorkspacesWorkspaceIdRoute,
  } as any)

const WorkspacesWorkspaceIdSetupIndexRoute =
  WorkspacesWorkspaceIdSetupIndexImport.update({
    path: '/setup/',
    getParentRoute: () => WorkspacesWorkspaceIdRoute,
  } as any)

const WorkspacesWorkspaceIdWorkspaceIndexRoute =
  WorkspacesWorkspaceIdWorkspaceIndexImport.update({
    path: '/',
    getParentRoute: () => WorkspacesWorkspaceIdWorkspaceRouteRoute,
  } as any)

const WorkspacesWorkspaceIdThreadsThreadIdRoute =
  WorkspacesWorkspaceIdThreadsThreadIdImport.update({
    path: '/threads/$threadId',
    getParentRoute: () => WorkspacesWorkspaceIdRoute,
  } as any)

const WorkspacesWorkspaceIdWorkspaceUnassignedRoute =
  WorkspacesWorkspaceIdWorkspaceUnassignedImport.update({
    path: '/unassigned',
    getParentRoute: () => WorkspacesWorkspaceIdWorkspaceRouteRoute,
  } as any)

const WorkspacesWorkspaceIdWorkspaceMeRoute =
  WorkspacesWorkspaceIdWorkspaceMeImport.update({
    path: '/me',
    getParentRoute: () => WorkspacesWorkspaceIdWorkspaceRouteRoute,
  } as any)

const WorkspacesWorkspaceIdWorkspaceLabelsLabelIdRoute =
  WorkspacesWorkspaceIdWorkspaceLabelsLabelIdImport.update({
    path: '/labels/$labelId',
    getParentRoute: () => WorkspacesWorkspaceIdWorkspaceRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRoute
    }
    '/recover': {
      id: '/recover'
      path: '/recover'
      fullPath: '/recover'
      preLoaderRoute: typeof RecoverImport
      parentRoute: typeof rootRoute
    }
    '/signin': {
      id: '/signin'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof SigninImport
      parentRoute: typeof rootRoute
    }
    '/signout': {
      id: '/signout'
      path: '/signout'
      fullPath: '/signout'
      preLoaderRoute: typeof SignoutImport
      parentRoute: typeof rootRoute
    }
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupImport
      parentRoute: typeof rootRoute
    }
    '/workspaces/$workspaceId': {
      id: '/workspaces/$workspaceId'
      path: '/workspaces/$workspaceId'
      fullPath: '/workspaces/$workspaceId'
      preLoaderRoute: typeof WorkspacesWorkspaceIdImport
      parentRoute: typeof rootRoute
    }
    '/workspaces/add': {
      id: '/workspaces/add'
      path: '/workspaces/add'
      fullPath: '/workspaces/add'
      preLoaderRoute: typeof WorkspacesAddImport
      parentRoute: typeof rootRoute
    }
    '/workspaces/': {
      id: '/workspaces/'
      path: '/workspaces'
      fullPath: '/workspaces'
      preLoaderRoute: typeof WorkspacesIndexImport
      parentRoute: typeof rootRoute
    }
    '/workspaces/$workspaceId/_workspace': {
      id: '/workspaces/$workspaceId/_workspace'
      path: ''
      fullPath: '/workspaces/$workspaceId'
      preLoaderRoute: typeof WorkspacesWorkspaceIdWorkspaceRouteImport
      parentRoute: typeof WorkspacesWorkspaceIdImport
    }
    '/workspaces/$workspaceId/_workspace/me': {
      id: '/workspaces/$workspaceId/_workspace/me'
      path: '/me'
      fullPath: '/workspaces/$workspaceId/me'
      preLoaderRoute: typeof WorkspacesWorkspaceIdWorkspaceMeImport
      parentRoute: typeof WorkspacesWorkspaceIdWorkspaceRouteImport
    }
    '/workspaces/$workspaceId/_workspace/unassigned': {
      id: '/workspaces/$workspaceId/_workspace/unassigned'
      path: '/unassigned'
      fullPath: '/workspaces/$workspaceId/unassigned'
      preLoaderRoute: typeof WorkspacesWorkspaceIdWorkspaceUnassignedImport
      parentRoute: typeof WorkspacesWorkspaceIdWorkspaceRouteImport
    }
    '/workspaces/$workspaceId/threads/$threadId': {
      id: '/workspaces/$workspaceId/threads/$threadId'
      path: '/threads/$threadId'
      fullPath: '/workspaces/$workspaceId/threads/$threadId'
      preLoaderRoute: typeof WorkspacesWorkspaceIdThreadsThreadIdImport
      parentRoute: typeof WorkspacesWorkspaceIdImport
    }
    '/workspaces/$workspaceId/_workspace/': {
      id: '/workspaces/$workspaceId/_workspace/'
      path: '/'
      fullPath: '/workspaces/$workspaceId/'
      preLoaderRoute: typeof WorkspacesWorkspaceIdWorkspaceIndexImport
      parentRoute: typeof WorkspacesWorkspaceIdWorkspaceRouteImport
    }
    '/workspaces/$workspaceId/setup/': {
      id: '/workspaces/$workspaceId/setup/'
      path: '/setup'
      fullPath: '/workspaces/$workspaceId/setup'
      preLoaderRoute: typeof WorkspacesWorkspaceIdSetupIndexImport
      parentRoute: typeof WorkspacesWorkspaceIdImport
    }
    '/workspaces/$workspaceId/_workspace/labels/$labelId': {
      id: '/workspaces/$workspaceId/_workspace/labels/$labelId'
      path: '/labels/$labelId'
      fullPath: '/workspaces/$workspaceId/labels/$labelId'
      preLoaderRoute: typeof WorkspacesWorkspaceIdWorkspaceLabelsLabelIdImport
      parentRoute: typeof WorkspacesWorkspaceIdWorkspaceRouteImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  AuthRouteRoute,
  RecoverRoute,
  SigninRoute,
  SignoutRoute,
  SignupRoute,
  WorkspacesWorkspaceIdRoute: WorkspacesWorkspaceIdRoute.addChildren({
    WorkspacesWorkspaceIdWorkspaceRouteRoute:
      WorkspacesWorkspaceIdWorkspaceRouteRoute.addChildren({
        WorkspacesWorkspaceIdWorkspaceMeRoute,
        WorkspacesWorkspaceIdWorkspaceUnassignedRoute,
        WorkspacesWorkspaceIdWorkspaceIndexRoute,
        WorkspacesWorkspaceIdWorkspaceLabelsLabelIdRoute,
      }),
    WorkspacesWorkspaceIdThreadsThreadIdRoute,
    WorkspacesWorkspaceIdSetupIndexRoute,
  }),
  WorkspacesAddRoute,
  WorkspacesIndexRoute,
})

/* prettier-ignore-end */
