/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SignupImport } from './routes/signup'
import { Route as SignoutImport } from './routes/signout'
import { Route as SigninImport } from './routes/signin'
import { Route as RecoverImport } from './routes/recover'
import { Route as AuthRouteImport } from './routes/_auth/route'
import { Route as IndexImport } from './routes/index'
import { Route as AuthWorkspacesIndexImport } from './routes/_auth/workspaces/index'
import { Route as AuthWorkspacesAddImport } from './routes/_auth/workspaces/add'
import { Route as AuthWorkspacesWorkspaceIdImport } from './routes/_auth/workspaces/$workspaceId'
import { Route as AuthWorkspacesWorkspaceIdSettingsRouteImport } from './routes/_auth/workspaces/$workspaceId/settings/route'
import { Route as AuthWorkspacesWorkspaceIdWorkspaceRouteImport } from './routes/_auth/workspaces/$workspaceId/_workspace/route'
import { Route as AuthWorkspacesWorkspaceIdSetupIndexImport } from './routes/_auth/workspaces/$workspaceId/setup/index'
import { Route as AuthWorkspacesWorkspaceIdSettingsIndexImport } from './routes/_auth/workspaces/$workspaceId/settings/index'
import { Route as AuthWorkspacesWorkspaceIdWorkspaceIndexImport } from './routes/_auth/workspaces/$workspaceId/_workspace/index'
import { Route as AuthWorkspacesWorkspaceIdThreadsThreadIdImport } from './routes/_auth/workspaces/$workspaceId/threads/$threadId'
import { Route as AuthWorkspacesWorkspaceIdSettingsWebhooksImport } from './routes/_auth/workspaces/$workspaceId/settings/webhooks'
import { Route as AuthWorkspacesWorkspaceIdSettingsSlackImport } from './routes/_auth/workspaces/$workspaceId/settings/slack'
import { Route as AuthWorkspacesWorkspaceIdSettingsMembersImport } from './routes/_auth/workspaces/$workspaceId/settings/members'
import { Route as AuthWorkspacesWorkspaceIdSettingsLinearImport } from './routes/_auth/workspaces/$workspaceId/settings/linear'
import { Route as AuthWorkspacesWorkspaceIdSettingsLabelsImport } from './routes/_auth/workspaces/$workspaceId/settings/labels'
import { Route as AuthWorkspacesWorkspaceIdSettingsGithubImport } from './routes/_auth/workspaces/$workspaceId/settings/github'
import { Route as AuthWorkspacesWorkspaceIdSettingsEventsImport } from './routes/_auth/workspaces/$workspaceId/settings/events'
import { Route as AuthWorkspacesWorkspaceIdSettingsEmailImport } from './routes/_auth/workspaces/$workspaceId/settings/email'
import { Route as AuthWorkspacesWorkspaceIdSettingsChatImport } from './routes/_auth/workspaces/$workspaceId/settings/chat'
import { Route as AuthWorkspacesWorkspaceIdSettingsBillingImport } from './routes/_auth/workspaces/$workspaceId/settings/billing'
import { Route as AuthWorkspacesWorkspaceIdSettingsAiImport } from './routes/_auth/workspaces/$workspaceId/settings/ai'
import { Route as AuthWorkspacesWorkspaceIdWorkspaceUnassignedImport } from './routes/_auth/workspaces/$workspaceId/_workspace/unassigned'
import { Route as AuthWorkspacesWorkspaceIdWorkspaceMeImport } from './routes/_auth/workspaces/$workspaceId/_workspace/me'
import { Route as AuthWorkspacesWorkspaceIdSettingsPatsIndexImport } from './routes/_auth/workspaces/$workspaceId/settings/pats/index'
import { Route as AuthWorkspacesWorkspaceIdSettingsPatsAddImport } from './routes/_auth/workspaces/$workspaceId/settings/pats/add'
import { Route as AuthWorkspacesWorkspaceIdWorkspaceLabelsLabelIdImport } from './routes/_auth/workspaces/$workspaceId/_workspace/labels.$labelId'

// Create/Update Routes

const SignupRoute = SignupImport.update({
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const SignoutRoute = SignoutImport.update({
  path: '/signout',
  getParentRoute: () => rootRoute,
} as any)

const SigninRoute = SigninImport.update({
  path: '/signin',
  getParentRoute: () => rootRoute,
} as any)

const RecoverRoute = RecoverImport.update({
  path: '/recover',
  getParentRoute: () => rootRoute,
} as any)

const AuthRouteRoute = AuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthWorkspacesIndexRoute = AuthWorkspacesIndexImport.update({
  path: '/workspaces/',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthWorkspacesAddRoute = AuthWorkspacesAddImport.update({
  path: '/workspaces/add',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthWorkspacesWorkspaceIdRoute = AuthWorkspacesWorkspaceIdImport.update({
  path: '/workspaces/$workspaceId',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthWorkspacesWorkspaceIdSettingsRouteRoute =
  AuthWorkspacesWorkspaceIdSettingsRouteImport.update({
    path: '/settings',
    getParentRoute: () => AuthWorkspacesWorkspaceIdRoute,
  } as any)

const AuthWorkspacesWorkspaceIdWorkspaceRouteRoute =
  AuthWorkspacesWorkspaceIdWorkspaceRouteImport.update({
    id: '/_workspace',
    getParentRoute: () => AuthWorkspacesWorkspaceIdRoute,
  } as any)

const AuthWorkspacesWorkspaceIdSetupIndexRoute =
  AuthWorkspacesWorkspaceIdSetupIndexImport.update({
    path: '/setup/',
    getParentRoute: () => AuthWorkspacesWorkspaceIdRoute,
  } as any)

const AuthWorkspacesWorkspaceIdSettingsIndexRoute =
  AuthWorkspacesWorkspaceIdSettingsIndexImport.update({
    path: '/',
    getParentRoute: () => AuthWorkspacesWorkspaceIdSettingsRouteRoute,
  } as any)

const AuthWorkspacesWorkspaceIdWorkspaceIndexRoute =
  AuthWorkspacesWorkspaceIdWorkspaceIndexImport.update({
    path: '/',
    getParentRoute: () => AuthWorkspacesWorkspaceIdWorkspaceRouteRoute,
  } as any)

const AuthWorkspacesWorkspaceIdThreadsThreadIdRoute =
  AuthWorkspacesWorkspaceIdThreadsThreadIdImport.update({
    path: '/threads/$threadId',
    getParentRoute: () => AuthWorkspacesWorkspaceIdRoute,
  } as any)

const AuthWorkspacesWorkspaceIdSettingsWebhooksRoute =
  AuthWorkspacesWorkspaceIdSettingsWebhooksImport.update({
    path: '/webhooks',
    getParentRoute: () => AuthWorkspacesWorkspaceIdSettingsRouteRoute,
  } as any)

const AuthWorkspacesWorkspaceIdSettingsSlackRoute =
  AuthWorkspacesWorkspaceIdSettingsSlackImport.update({
    path: '/slack',
    getParentRoute: () => AuthWorkspacesWorkspaceIdSettingsRouteRoute,
  } as any)

const AuthWorkspacesWorkspaceIdSettingsMembersRoute =
  AuthWorkspacesWorkspaceIdSettingsMembersImport.update({
    path: '/members',
    getParentRoute: () => AuthWorkspacesWorkspaceIdSettingsRouteRoute,
  } as any)

const AuthWorkspacesWorkspaceIdSettingsLinearRoute =
  AuthWorkspacesWorkspaceIdSettingsLinearImport.update({
    path: '/linear',
    getParentRoute: () => AuthWorkspacesWorkspaceIdSettingsRouteRoute,
  } as any)

const AuthWorkspacesWorkspaceIdSettingsLabelsRoute =
  AuthWorkspacesWorkspaceIdSettingsLabelsImport.update({
    path: '/labels',
    getParentRoute: () => AuthWorkspacesWorkspaceIdSettingsRouteRoute,
  } as any)

const AuthWorkspacesWorkspaceIdSettingsGithubRoute =
  AuthWorkspacesWorkspaceIdSettingsGithubImport.update({
    path: '/github',
    getParentRoute: () => AuthWorkspacesWorkspaceIdSettingsRouteRoute,
  } as any)

const AuthWorkspacesWorkspaceIdSettingsEventsRoute =
  AuthWorkspacesWorkspaceIdSettingsEventsImport.update({
    path: '/events',
    getParentRoute: () => AuthWorkspacesWorkspaceIdSettingsRouteRoute,
  } as any)

const AuthWorkspacesWorkspaceIdSettingsEmailRoute =
  AuthWorkspacesWorkspaceIdSettingsEmailImport.update({
    path: '/email',
    getParentRoute: () => AuthWorkspacesWorkspaceIdSettingsRouteRoute,
  } as any)

const AuthWorkspacesWorkspaceIdSettingsChatRoute =
  AuthWorkspacesWorkspaceIdSettingsChatImport.update({
    path: '/chat',
    getParentRoute: () => AuthWorkspacesWorkspaceIdSettingsRouteRoute,
  } as any)

const AuthWorkspacesWorkspaceIdSettingsBillingRoute =
  AuthWorkspacesWorkspaceIdSettingsBillingImport.update({
    path: '/billing',
    getParentRoute: () => AuthWorkspacesWorkspaceIdSettingsRouteRoute,
  } as any)

const AuthWorkspacesWorkspaceIdSettingsAiRoute =
  AuthWorkspacesWorkspaceIdSettingsAiImport.update({
    path: '/ai',
    getParentRoute: () => AuthWorkspacesWorkspaceIdSettingsRouteRoute,
  } as any)

const AuthWorkspacesWorkspaceIdWorkspaceUnassignedRoute =
  AuthWorkspacesWorkspaceIdWorkspaceUnassignedImport.update({
    path: '/unassigned',
    getParentRoute: () => AuthWorkspacesWorkspaceIdWorkspaceRouteRoute,
  } as any)

const AuthWorkspacesWorkspaceIdWorkspaceMeRoute =
  AuthWorkspacesWorkspaceIdWorkspaceMeImport.update({
    path: '/me',
    getParentRoute: () => AuthWorkspacesWorkspaceIdWorkspaceRouteRoute,
  } as any)

const AuthWorkspacesWorkspaceIdSettingsPatsIndexRoute =
  AuthWorkspacesWorkspaceIdSettingsPatsIndexImport.update({
    path: '/pats/',
    getParentRoute: () => AuthWorkspacesWorkspaceIdSettingsRouteRoute,
  } as any)

const AuthWorkspacesWorkspaceIdSettingsPatsAddRoute =
  AuthWorkspacesWorkspaceIdSettingsPatsAddImport.update({
    path: '/pats/add',
    getParentRoute: () => AuthWorkspacesWorkspaceIdSettingsRouteRoute,
  } as any)

const AuthWorkspacesWorkspaceIdWorkspaceLabelsLabelIdRoute =
  AuthWorkspacesWorkspaceIdWorkspaceLabelsLabelIdImport.update({
    path: '/labels/$labelId',
    getParentRoute: () => AuthWorkspacesWorkspaceIdWorkspaceRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRoute
    }
    '/recover': {
      id: '/recover'
      path: '/recover'
      fullPath: '/recover'
      preLoaderRoute: typeof RecoverImport
      parentRoute: typeof rootRoute
    }
    '/signin': {
      id: '/signin'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof SigninImport
      parentRoute: typeof rootRoute
    }
    '/signout': {
      id: '/signout'
      path: '/signout'
      fullPath: '/signout'
      preLoaderRoute: typeof SignoutImport
      parentRoute: typeof rootRoute
    }
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupImport
      parentRoute: typeof rootRoute
    }
    '/_auth/workspaces/$workspaceId': {
      id: '/_auth/workspaces/$workspaceId'
      path: '/workspaces/$workspaceId'
      fullPath: '/workspaces/$workspaceId'
      preLoaderRoute: typeof AuthWorkspacesWorkspaceIdImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/workspaces/add': {
      id: '/_auth/workspaces/add'
      path: '/workspaces/add'
      fullPath: '/workspaces/add'
      preLoaderRoute: typeof AuthWorkspacesAddImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/workspaces/': {
      id: '/_auth/workspaces/'
      path: '/workspaces'
      fullPath: '/workspaces'
      preLoaderRoute: typeof AuthWorkspacesIndexImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/workspaces/$workspaceId/_workspace': {
      id: '/_auth/workspaces/$workspaceId/_workspace'
      path: ''
      fullPath: '/workspaces/$workspaceId'
      preLoaderRoute: typeof AuthWorkspacesWorkspaceIdWorkspaceRouteImport
      parentRoute: typeof AuthWorkspacesWorkspaceIdImport
    }
    '/_auth/workspaces/$workspaceId/settings': {
      id: '/_auth/workspaces/$workspaceId/settings'
      path: '/settings'
      fullPath: '/workspaces/$workspaceId/settings'
      preLoaderRoute: typeof AuthWorkspacesWorkspaceIdSettingsRouteImport
      parentRoute: typeof AuthWorkspacesWorkspaceIdImport
    }
    '/_auth/workspaces/$workspaceId/_workspace/me': {
      id: '/_auth/workspaces/$workspaceId/_workspace/me'
      path: '/me'
      fullPath: '/workspaces/$workspaceId/me'
      preLoaderRoute: typeof AuthWorkspacesWorkspaceIdWorkspaceMeImport
      parentRoute: typeof AuthWorkspacesWorkspaceIdWorkspaceRouteImport
    }
    '/_auth/workspaces/$workspaceId/_workspace/unassigned': {
      id: '/_auth/workspaces/$workspaceId/_workspace/unassigned'
      path: '/unassigned'
      fullPath: '/workspaces/$workspaceId/unassigned'
      preLoaderRoute: typeof AuthWorkspacesWorkspaceIdWorkspaceUnassignedImport
      parentRoute: typeof AuthWorkspacesWorkspaceIdWorkspaceRouteImport
    }
    '/_auth/workspaces/$workspaceId/settings/ai': {
      id: '/_auth/workspaces/$workspaceId/settings/ai'
      path: '/ai'
      fullPath: '/workspaces/$workspaceId/settings/ai'
      preLoaderRoute: typeof AuthWorkspacesWorkspaceIdSettingsAiImport
      parentRoute: typeof AuthWorkspacesWorkspaceIdSettingsRouteImport
    }
    '/_auth/workspaces/$workspaceId/settings/billing': {
      id: '/_auth/workspaces/$workspaceId/settings/billing'
      path: '/billing'
      fullPath: '/workspaces/$workspaceId/settings/billing'
      preLoaderRoute: typeof AuthWorkspacesWorkspaceIdSettingsBillingImport
      parentRoute: typeof AuthWorkspacesWorkspaceIdSettingsRouteImport
    }
    '/_auth/workspaces/$workspaceId/settings/chat': {
      id: '/_auth/workspaces/$workspaceId/settings/chat'
      path: '/chat'
      fullPath: '/workspaces/$workspaceId/settings/chat'
      preLoaderRoute: typeof AuthWorkspacesWorkspaceIdSettingsChatImport
      parentRoute: typeof AuthWorkspacesWorkspaceIdSettingsRouteImport
    }
    '/_auth/workspaces/$workspaceId/settings/email': {
      id: '/_auth/workspaces/$workspaceId/settings/email'
      path: '/email'
      fullPath: '/workspaces/$workspaceId/settings/email'
      preLoaderRoute: typeof AuthWorkspacesWorkspaceIdSettingsEmailImport
      parentRoute: typeof AuthWorkspacesWorkspaceIdSettingsRouteImport
    }
    '/_auth/workspaces/$workspaceId/settings/events': {
      id: '/_auth/workspaces/$workspaceId/settings/events'
      path: '/events'
      fullPath: '/workspaces/$workspaceId/settings/events'
      preLoaderRoute: typeof AuthWorkspacesWorkspaceIdSettingsEventsImport
      parentRoute: typeof AuthWorkspacesWorkspaceIdSettingsRouteImport
    }
    '/_auth/workspaces/$workspaceId/settings/github': {
      id: '/_auth/workspaces/$workspaceId/settings/github'
      path: '/github'
      fullPath: '/workspaces/$workspaceId/settings/github'
      preLoaderRoute: typeof AuthWorkspacesWorkspaceIdSettingsGithubImport
      parentRoute: typeof AuthWorkspacesWorkspaceIdSettingsRouteImport
    }
    '/_auth/workspaces/$workspaceId/settings/labels': {
      id: '/_auth/workspaces/$workspaceId/settings/labels'
      path: '/labels'
      fullPath: '/workspaces/$workspaceId/settings/labels'
      preLoaderRoute: typeof AuthWorkspacesWorkspaceIdSettingsLabelsImport
      parentRoute: typeof AuthWorkspacesWorkspaceIdSettingsRouteImport
    }
    '/_auth/workspaces/$workspaceId/settings/linear': {
      id: '/_auth/workspaces/$workspaceId/settings/linear'
      path: '/linear'
      fullPath: '/workspaces/$workspaceId/settings/linear'
      preLoaderRoute: typeof AuthWorkspacesWorkspaceIdSettingsLinearImport
      parentRoute: typeof AuthWorkspacesWorkspaceIdSettingsRouteImport
    }
    '/_auth/workspaces/$workspaceId/settings/members': {
      id: '/_auth/workspaces/$workspaceId/settings/members'
      path: '/members'
      fullPath: '/workspaces/$workspaceId/settings/members'
      preLoaderRoute: typeof AuthWorkspacesWorkspaceIdSettingsMembersImport
      parentRoute: typeof AuthWorkspacesWorkspaceIdSettingsRouteImport
    }
    '/_auth/workspaces/$workspaceId/settings/slack': {
      id: '/_auth/workspaces/$workspaceId/settings/slack'
      path: '/slack'
      fullPath: '/workspaces/$workspaceId/settings/slack'
      preLoaderRoute: typeof AuthWorkspacesWorkspaceIdSettingsSlackImport
      parentRoute: typeof AuthWorkspacesWorkspaceIdSettingsRouteImport
    }
    '/_auth/workspaces/$workspaceId/settings/webhooks': {
      id: '/_auth/workspaces/$workspaceId/settings/webhooks'
      path: '/webhooks'
      fullPath: '/workspaces/$workspaceId/settings/webhooks'
      preLoaderRoute: typeof AuthWorkspacesWorkspaceIdSettingsWebhooksImport
      parentRoute: typeof AuthWorkspacesWorkspaceIdSettingsRouteImport
    }
    '/_auth/workspaces/$workspaceId/threads/$threadId': {
      id: '/_auth/workspaces/$workspaceId/threads/$threadId'
      path: '/threads/$threadId'
      fullPath: '/workspaces/$workspaceId/threads/$threadId'
      preLoaderRoute: typeof AuthWorkspacesWorkspaceIdThreadsThreadIdImport
      parentRoute: typeof AuthWorkspacesWorkspaceIdImport
    }
    '/_auth/workspaces/$workspaceId/_workspace/': {
      id: '/_auth/workspaces/$workspaceId/_workspace/'
      path: '/'
      fullPath: '/workspaces/$workspaceId/'
      preLoaderRoute: typeof AuthWorkspacesWorkspaceIdWorkspaceIndexImport
      parentRoute: typeof AuthWorkspacesWorkspaceIdWorkspaceRouteImport
    }
    '/_auth/workspaces/$workspaceId/settings/': {
      id: '/_auth/workspaces/$workspaceId/settings/'
      path: '/'
      fullPath: '/workspaces/$workspaceId/settings/'
      preLoaderRoute: typeof AuthWorkspacesWorkspaceIdSettingsIndexImport
      parentRoute: typeof AuthWorkspacesWorkspaceIdSettingsRouteImport
    }
    '/_auth/workspaces/$workspaceId/setup/': {
      id: '/_auth/workspaces/$workspaceId/setup/'
      path: '/setup'
      fullPath: '/workspaces/$workspaceId/setup'
      preLoaderRoute: typeof AuthWorkspacesWorkspaceIdSetupIndexImport
      parentRoute: typeof AuthWorkspacesWorkspaceIdImport
    }
    '/_auth/workspaces/$workspaceId/_workspace/labels/$labelId': {
      id: '/_auth/workspaces/$workspaceId/_workspace/labels/$labelId'
      path: '/labels/$labelId'
      fullPath: '/workspaces/$workspaceId/labels/$labelId'
      preLoaderRoute: typeof AuthWorkspacesWorkspaceIdWorkspaceLabelsLabelIdImport
      parentRoute: typeof AuthWorkspacesWorkspaceIdWorkspaceRouteImport
    }
    '/_auth/workspaces/$workspaceId/settings/pats/add': {
      id: '/_auth/workspaces/$workspaceId/settings/pats/add'
      path: '/pats/add'
      fullPath: '/workspaces/$workspaceId/settings/pats/add'
      preLoaderRoute: typeof AuthWorkspacesWorkspaceIdSettingsPatsAddImport
      parentRoute: typeof AuthWorkspacesWorkspaceIdSettingsRouteImport
    }
    '/_auth/workspaces/$workspaceId/settings/pats/': {
      id: '/_auth/workspaces/$workspaceId/settings/pats/'
      path: '/pats'
      fullPath: '/workspaces/$workspaceId/settings/pats'
      preLoaderRoute: typeof AuthWorkspacesWorkspaceIdSettingsPatsIndexImport
      parentRoute: typeof AuthWorkspacesWorkspaceIdSettingsRouteImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  AuthRouteRoute: AuthRouteRoute.addChildren({
    AuthWorkspacesWorkspaceIdRoute: AuthWorkspacesWorkspaceIdRoute.addChildren({
      AuthWorkspacesWorkspaceIdWorkspaceRouteRoute:
        AuthWorkspacesWorkspaceIdWorkspaceRouteRoute.addChildren({
          AuthWorkspacesWorkspaceIdWorkspaceMeRoute,
          AuthWorkspacesWorkspaceIdWorkspaceUnassignedRoute,
          AuthWorkspacesWorkspaceIdWorkspaceIndexRoute,
          AuthWorkspacesWorkspaceIdWorkspaceLabelsLabelIdRoute,
        }),
      AuthWorkspacesWorkspaceIdSettingsRouteRoute:
        AuthWorkspacesWorkspaceIdSettingsRouteRoute.addChildren({
          AuthWorkspacesWorkspaceIdSettingsAiRoute,
          AuthWorkspacesWorkspaceIdSettingsBillingRoute,
          AuthWorkspacesWorkspaceIdSettingsChatRoute,
          AuthWorkspacesWorkspaceIdSettingsEmailRoute,
          AuthWorkspacesWorkspaceIdSettingsEventsRoute,
          AuthWorkspacesWorkspaceIdSettingsGithubRoute,
          AuthWorkspacesWorkspaceIdSettingsLabelsRoute,
          AuthWorkspacesWorkspaceIdSettingsLinearRoute,
          AuthWorkspacesWorkspaceIdSettingsMembersRoute,
          AuthWorkspacesWorkspaceIdSettingsSlackRoute,
          AuthWorkspacesWorkspaceIdSettingsWebhooksRoute,
          AuthWorkspacesWorkspaceIdSettingsIndexRoute,
          AuthWorkspacesWorkspaceIdSettingsPatsAddRoute,
          AuthWorkspacesWorkspaceIdSettingsPatsIndexRoute,
        }),
      AuthWorkspacesWorkspaceIdThreadsThreadIdRoute,
      AuthWorkspacesWorkspaceIdSetupIndexRoute,
    }),
    AuthWorkspacesAddRoute,
    AuthWorkspacesIndexRoute,
  }),
  RecoverRoute,
  SigninRoute,
  SignoutRoute,
  SignupRoute,
})

/* prettier-ignore-end */
