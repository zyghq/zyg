volumes:
  database-data:

networks:
  stack:
    name: stack
    external: false

services:
  database:
    container_name: postgres
    image: postgres
    restart: always
    volumes:
      - database-data:/var/lib/postgresql/data/
    env_file: .env
    networks:
      - stack
    ports:
      - "5432:5432"

  # redis:
  #   container_name: redis
  #   image: redis
  #   restart: always
  #   command: redis-server --requirepass ${REDIS_PASSWORD} --user ${REDIS_USERNAME} on '>${REDIS_PASSWORD}' '~*' allcommands
  #   env_file: .env
  #   networks:
  #     - stack
  #   ports:
  #     - "6379:6379"

  srv:
    container_name: srv
    build:
      context: ./backend
      dockerfile: srv.DockerFile
      args:
        - ZYG_SRV_PORT=${ZYG_SRV_PORT}
        - DATABASE_URL=${DATABASE_URL}
        - SUPABASE_JWT_SECRET=${SUPABASE_JWT_SECRET}
        - RESEND_API_KEY=${RESEND_API_KEY}
        - ZYG_DB_QUERY_DEBUG=${ZYG_DB_QUERY_DEBUG}
    restart: always
    depends_on:
      - database
    env_file: .env
    networks:
      - stack
    ports:
      - "${ZYG_SRV_PORT}:${ZYG_SRV_PORT}"
    profiles:
      - server

  xsrv:
    container_name: xsrv
    build:
      context: ./backend
      dockerfile: xsrv.DockerFile
      args:
        - ZYG_XSRV_PORT=${ZYG_XSRV_PORT}
        - DATABASE_URL=${DATABASE_URL}
        - SUPABASE_JWT_SECRET=${SUPABASE_JWT_SECRET}
        - RESEND_API_KEY=${RESEND_API_KEY}
        - ZYG_DB_QUERY_DEBUG=${ZYG_DB_QUERY_DEBUG}
    restart: always
    depends_on:
      - database
      - redis
    env_file: .env
    networks:
      - stack
    ports:
      - "${ZYG_XSRV_PORT}:${ZYG_XSRV_PORT}"
    profiles:
      - server

  electric:
    container_name: electric
    image: electricsql/electric:latest
    restart: always
    env_file: .env.electric
    networks:
      - stack
    ports:
      - "${ELECTRIC_PORT}:${ELECTRIC_PORT}"
    profiles:
      - electric
